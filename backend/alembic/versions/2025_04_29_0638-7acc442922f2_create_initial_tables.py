"""Create initial tables

Revision ID: 7acc442922f2
Revises: 
Create Date: 2025-04-29 06:38:27.170563

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7acc442922f2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
description: Union[str, None] = 'Create initial tables'
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_table('users') # 注释掉删除操作
    
    # 1. 创建 users 表 (被依赖)
    op.create_table('users',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('full_name', sa.String(length=120), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    
    # 2. 创建 tools 表 (无依赖)
    op.create_table('tools',
    sa.Column('tool_id', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('type', sa.Enum('mcp', 'http', name='tool_type'), nullable=False),
    sa.Column('description', sa.String(length=512), nullable=True),
    sa.Column('endpoint', sa.JSON(), nullable=False),
    sa.Column('request_schema', sa.JSON(), nullable=False),
    sa.Column('response_schema', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('tool_id')
    )
    
    # 3. 创建 sessions 表 (依赖 users)
    op.create_table('sessions', 
    sa.Column('session_id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=True),
    sa.Column('status', sa.Enum('interpreting', 'waiting_confirm', 'executing', 'done', 'error', name='session_status'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('session_id')
    )
    
    # 4. 创建 logs 表 (依赖 sessions)
    op.create_table('logs',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('session_id', sa.String(length=36), nullable=False),
    sa.Column('step', sa.String(length=32), nullable=False),
    sa.Column('status', sa.String(length=32), nullable=False),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.session_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # 删除顺序与创建顺序相反
    op.drop_table('logs')
    op.drop_table('sessions')
    op.drop_table('tools')
    op.drop_table('users')
    # ### end Alembic commands ###
