# A generic, single database configuration.

[alembic]
# path separator to use
# (e.g. %%(here)s/migrations -> /path/to/here/migrations)
#
# path separator used for INI file interpolation
# value is either "unix" or "windows"
path_separator = unix

# set to 'true' to run the environment during
# the offline phase
# offline_mode = false


# script_location is the path to the directory that contains the alembic
# migration scripts. This path is interpreted relative to the alembic
# configuration file located in the same directory as this one.
#
# Omit this value to allow alembic commands to be invoked
# from any directory. Normally this is the case, unless
# you have multiple migration environments in a single project.
# Relative path is sensitive to current working directory when
# this value is omitted.
#
# script_location = migrations
script_location = alembic

# The file encoding used to create new script files
# file_template = %%(rev)s_%%(slug)s

# The template used to name new script files
# {rev} - the revision name
# {slug} - a "slugified" version of the script title
# {year} {month} {day} {hour} {minute} {second} - UTC timestamp fields
file_template = %%(year)d_%%(month).2d_%%(day).2d_%%(hour).2d%%(minute).2d-%%(rev)s_%%(slug)s

# timezone to use when rendering the date within the migration file
# as well as the filename.
# If specified, requires the "python-dateutil" library.
# If None, the local system timezone is used.
# timezone =

# sys.path path, will be prepended to sys.path if present.
# defaults to the current working directory.
# prepend_sys_path = .

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %%(levelname)-5.5s [%%(name)s] %%(message)s
datefmt = %%H:%%M:%%S


# revision identifiers describe some number of Alembic revision files in terms
# of symbolic names.
[revision]
# Specifies the format of revision identifiers
# "sequential" - uses sequential integer identifiers
# "timestamp" - uses filesystem timestamp identifiers
# "both" - use both, resulting in filenames like "0001_timestamp_downgrade.py"
# identifier_format = sequential

# Set to true to create new migration files with a header that
# suggests UTF-8 encoding. Set to false to omit the header. Requires Alembic 1.11.
# utf8_scripts = false


[post_write_hooks]
# format is module:function_name
# hooks =
# a hook takes the following arguments:
# revision - the full revision string
# options - the command line options
# Example:
# hooks = myapp.migration_hook:do_revision_hook



# Variables that can be placed into the env.py environment script
# via init_env().
# Variables that are sensitive in nature, such as database passwords,
# should be sourced from environment variables or other secure storage
# mechanisms, and not be placed directly into this file.
# Example:
# my_variable = value

# --- Logging configuration (Optional) ---
# If you have specific logging requirements, you can configure them here.
# Refer to the Python logging documentation for details.

# --- Database Connection Configuration ---
# Replace the sample URL below with your actual database connection string.
# Use environment variables for sensitive information like passwords.
# For example, to use an environment variable named DATABASE_URL:
# sqlalchemy.url = %(DATABASE_URL)s
# Ensure the environment variable is set before running Alembic commands.

# Example for PostgreSQL:
# sqlalchemy.url = postgresql+psycopg2://user:password@host/dbname

# Example for MySQL:
# sqlalchemy.url = mysql+pymysql://user:password@host/dbname

# Example for SQLite:
# sqlalchemy.url = sqlite:///mydatabase.db

# Using the connection string from our settings
sqlalchemy.url = mysql+pymysql://root:b9clqt26@test-db-mysql.ns-6dvkv8ga.svc:3306/ai_assistant


# -- Other Alembic Configuration Options --
# For more configuration options, refer to the Alembic documentation:
# https://alembic.sqlalchemy.org/en/latest/tutorial.html#configuration
